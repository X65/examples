FEATURES {
    STARTADDRESS: default = $0200;
}
SYMBOLS {
    __STACKSIZE__:  type = weak, value = $0100;
    __STACKSTART__: type = weak, value = $0100;
    __ZPSTART__:    type = weak, value = $0000;
}
MEMORY {
    ZP:         file = "", define = yes, start = __ZPSTART__, size = $0100;
    MAIN:       file = %O, define = yes, start = %S,    size = $FC00 - %S;
    INFO   :    file = %O, define = yes, start = $FC00, size = $100;
    VECTORS:    file = %O, define = yes, start = $FFE0, size = $20;
}
FILES {
    %O: format = atari;
}
SEGMENTS {
    ZEROPAGE:  load = ZP,         type = zp;
    EXTZP:     load = ZP,         type = zp,                optional = yes;
    STARTUP:   load = MAIN,       type = ro,  define = yes, optional = yes;
    LOWBSS:    load = MAIN,       type = rw,                optional = yes;  # not zero initialized
    LOWCODE:   load = MAIN,       type = ro,  define = yes, optional = yes;
    ONCE:      load = MAIN,       type = ro,                optional = yes;
    CODE:      load = MAIN,       type = ro,  define = yes;
    RODATA:    load = MAIN,       type = ro;
    DATA:      load = MAIN,       type = rw;
    INIT:      load = MAIN,       type = bss,               optional = yes;
    BSS:       load = MAIN,       type = bss, define = yes;

    INFO:      load = INFO,       start =  $FC00,           optional = yes;
    VECTORS:   load = VECTORS,    start =  $FFE0,           optional = yes;
}
FEATURES {
    CONDES: type    = constructor,
            label   = __CONSTRUCTOR_TABLE__,
            count   = __CONSTRUCTOR_COUNT__,
            segment = ONCE;
    CONDES: type    = destructor,
            label   = __DESTRUCTOR_TABLE__,
            count   = __DESTRUCTOR_COUNT__,
            segment = RODATA;
    CONDES: type    = interruptor,
            label   = __INTERRUPTOR_TABLE__,
            count   = __INTERRUPTOR_COUNT__,
            segment = RODATA,
            import  = __CALLIRQ__;
}
